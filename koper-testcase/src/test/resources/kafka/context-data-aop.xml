<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    


          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/aop    
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 启动AspectJ支持 -->
    <aop:aspectj-autoproxy/>

    <bean id="beforeSendMessageAdvice" class="com.zhaimi.koper.aop.SendMsgBeforeInvokeAdvice"/>
    <bean id="afterSendMessageAdvice" class="com.zhaimi.koper.aop.SendMsgAfterInvokeAdvice"/>
    <bean id="exceptionSendMessageAdvice" class="com.zhaimi.koper.aop.SendMsgAfterExceptionAdvice">
        <property name="addStackTrace" value="true"/>
    </bean>

    <aop:config>
        <!-- 标注切面，可以根据需要，在DAO或Service相应方法上使用标注 -->
        <aop:pointcut id="beforeSendMsgPointCut" expression="@annotation(com.zhaimi.koper.aop.SendMessageBefore)"/>
        <aop:pointcut id="afterSendMsgPointCut" expression="@annotation(com.zhaimi.koper.aop.SendMessageAfter)"/>

        <!-- 通配符切面，可以按需要修改通配符表达式 -->
        <!-- 方法调用前发送消息 -->
        <aop:pointcut id="insertBeforeSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.insert*(..))"/>
        <aop:pointcut id="updateBeforeSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.update*(..))"/>
        <aop:pointcut id="deleteBeforeSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.delete*(..))"/>

        <!-- 方法调用后发送消息 -->
        <aop:pointcut id="insertAfterSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.insert*(..))"/>
        <aop:pointcut id="updateAfterSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.update*(..))"/>
        <aop:pointcut id="deleteAfterSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.delete*(..))"/>
        <aop:pointcut id="cancelAfterSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.cancel*(..))"/>


        <!-- 方法调用失败后发送消息 -->
        <aop:pointcut id="insertAfterExceptionSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.insert*(..))"/>
        <aop:pointcut id="updateAfterExceptionSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.update*(..))"/>
        <aop:pointcut id="deleteAfterExceptionSendMsgPointCut"
                      expression="execution(* com.zhaimi..mapper.impl.*MapperImpl.delete*(..))"/>

        <!-- 1. before -->
        <aop:aspect id="insertBeforeSendMsgPointCutAspect" ref="beforeSendMessageAdvice">
            <aop:around pointcut-ref="insertBeforeSendMsgPointCut" method="around"/>
        </aop:aspect>

        <aop:aspect id="updateBeforeSendMsgPointCutAspect" ref="beforeSendMessageAdvice">
            <aop:around pointcut-ref="updateBeforeSendMsgPointCut" method="around"/>
        </aop:aspect>

        <aop:aspect id="deleteBeforeSendMsgPointCutAspect" ref="beforeSendMessageAdvice">
            <aop:around pointcut-ref="deleteBeforeSendMsgPointCut" method="around"/>
        </aop:aspect>

        <!-- 2. after -->
        <aop:aspect id="insertAfterSendMsgPointCutAspect" ref="afterSendMessageAdvice">
            <aop:around pointcut-ref="insertAfterSendMsgPointCut" method="around"/>
        </aop:aspect>


        <aop:aspect id="updateAfterSendMsgPointCutAspect" ref="afterSendMessageAdvice">
            <aop:around pointcut-ref="updateAfterSendMsgPointCut" method="around"/>
        </aop:aspect>

        <aop:aspect id="deleteAfterSendMsgPointCutAspect" ref="afterSendMessageAdvice">
            <aop:around pointcut-ref="deleteAfterSendMsgPointCut" method="around"/>
        </aop:aspect>

        <aop:aspect id="cancelAfterSendMsgPointCutAspect" ref="afterSendMessageAdvice">
            <aop:around pointcut-ref="cancelAfterSendMsgPointCut" method="around"/>
        </aop:aspect>

        <!-- 3. exception -->
        <aop:aspect id="insertAfterExceptionSendMsgPointCutAspect" ref="exceptionSendMessageAdvice">
            <aop:around pointcut-ref="insertAfterExceptionSendMsgPointCut" method="around"/>
        </aop:aspect>


        <aop:aspect id="updateAfterExceptionSendMsgPointCutAspect" ref="exceptionSendMessageAdvice">
            <aop:around pointcut-ref="updateAfterExceptionSendMsgPointCut" method="around"/>
        </aop:aspect>

        <aop:aspect id="deleteAfterExceptionSendMsgPointCutAspect" ref="exceptionSendMessageAdvice">
            <aop:around pointcut-ref="deleteAfterExceptionSendMsgPointCut" method="around"/>
        </aop:aspect>

    </aop:config>


</beans>
